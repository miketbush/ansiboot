---
  - variables:
      bob: 0
      steve: "hello"
      mrarray: {"A","B","C","D"}
      mrdict: ["E": "F" , "G": "H"]
      _DEBUG_: True
  - connector:
      type: azure_connector
      cloud: AzureUSGovernment
      subscription: $TF_VAR_ARM_SUBSCRIPTION_ID
      principle: $TF_VAR_ARM_CLIENT_ID
      secret: $TF_VAR_ARM_CLIENT_SECRET
      tenant: $TF_VAR_ARM_TENANT_ID
      processor: RunPowerShellScript
  - connector:
      type: aws_connector
      cloud: AzureUSGovernment
      principle: $TF_VAR_ARM_CLIENT_ID
      secret: $TF_VAR_ARM_CLIENT_SECRET
      processor: AWS-RunPowerShellScript
      region: us-gov-west-1
  #- connector:
  #    name: aws_connector
  #    type: aws_connector
  #    cloud: gov
  #    accessid: $TF_VAR_ACCESSKEY
  #    secret: $TF_VAR_SECRETKEY
  #    region: $TF_VAR_AWSREGION

  - connector:
      name: MyAnsible
      type: ansible_connector
      user: ansible_local
      password: $ANSIBLE_PASSWORD
      processor: powershell

  - connector:
      name: Local2
      type: local_connector
      desc: "Alt 2 Connection"

  - connector:
      name: local_connector_3
      type: local_connector
      desc: "Alt 3 Connection"

  - connector:
      name: local_4
      type: downloaded_connector
      url: https://raw.githubusercontent.com/miketbush/ansiboot/main/local_connector.py
      desc: "Downloaded 3 Connection"

  - connector:
      name: ps1
      type: powershell_connector
      desc: "Powershell Commands"

  - connector:
      name: URL1
      type: url_connector

  - connector:
      name: gitlab
      type: gitlab_connector
      host: $GITLAB_HOST
      auth: $GITLAB_AUTH

  - connector:
      name: py
      type: python_connector

  - connector:
      name: util
      type: utility_connector

  - name: Test Gitlab Search
    connection: gitlab
    search:
      scope: projects
      criteria: "terraform-"
    as:
      - git_projects

  - name: Capture Project Ids
    connection: util
    mapbykey:
      key: id
      map: git_projects
    as:
      - project_ids

#  - name: Capture Project Ids
#    connection: py
#    script: |
#      project_ids = dict()
#      projects = variables["git_projects"]
#      for s in projects:
#        # print("Project Id:" + str(s["id"]))
#        project_ids[str(s["id"])] = s
#      variables["project_ids"] = project_ids

  - name: Get Gitlab Variables for each Project Id
    connection: gitlab
    project:
      each: project_ids
    pipeline-vars:
    as:
      - git_vars

  - name: Print tags
    connection: py
    script: |
      i=1
      print("Found Project Count: " + str( len(variables["git_vars"]) ))
      for s in variables["git_vars"]:
        if "TF_VAR_ARM_CLIENT_ID" in variables["git_vars"][s]:
          print(str(i) + ":" + variables["git_vars"][s]["TF_VAR_ARM_CLIENT_ID"])
          i=i+1
        if "TF_VAR_ACCESSKEY" in variables["git_vars"][s]:
          print(str(i) + ":" + variables["git_vars"][s]["TF_VAR_ACCESSKEY"])
          i=i+1

#  - name: Print tags
#    connection: py
#    script: |
#      for s in ["BOB","STEVE","JOE","FRED"]:
#        variables["UNCLE"] = s
#        call_play("Print Console")

  - name: Name of Azure Subscription
    connection: ps1
    command: echo "$var:TF_VAR_ARM_SUBSCRIPTION_ID"

  - name: Print Hello
    connection: ps1
    ignore: True
    command: echo "$var:UNCLE"

  - name: Print Console
    connection: Local2
    ignore: True
    command: echo $UNCLE